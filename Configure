# Apache-Tomcat-ModJK

Configuration and deployment of Apache HTTP & Apache tomcat server for Java applications providing high availability & load balancing using connectors .

http://www.ramkitech.com/2012/03/virtual-host-apache-httpd-server-tomcat.html
https://www.mulesoft.com/tcat/apache-tomcat-mod-jk-connector-configuration
http://www.ramkitech.com/2012/10/tomcat-clustering-series-simple-load.html
https://alextheedom.wordpress.com/microservices/set-up-tomcat-apache-and-mod_jk-cluster/

Why ??
----------------------------------------------------
High availability by providing load balancing between multiple Tomcat app servers
Static content can be processed and delivered much faster using Apache as front-end
Extra functions can be added by using a wide range of Apache modules
Tomcat is more seure and keeping apache in front will secure it more

Install httpd & compile mod_jk module 
install open-jre-7 centos
install tomcat
create two Apps TEST1 TEST2

https://blogs.gnome.org/bolsh/2011/12/09/connecting-apache-httpd-to-tomcat-with-mod_jk-the-bare-minimum/



MOD_JK Techniques
------------------------------------------------------------------------------------------------------------

HTTPD.conf
----------------

LoadModule    jk_module  modules/mod_jk.so

JkWorkersFile conf/workers.properties

JkLogFile     logs/mod_jk.log
JkLogLevel    emerg
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
JkOptions     +ForwardKeySize +ForwardURICompat -ForwardDirectories
JkRequestLogFormat     "%w %V %T"

JkMount  /status  stat
JkMount  /*  balancer


workers.properties
----------------------------------------------------

worker.list=balancer,stat

worker.tomcat1.type=ajp13
worker.tomcat1.port=8009
worker.tomcat1.host=localhost

worker.tomcat2.type=ajp13
worker.tomcat2.port=8010
worker.tomcat2.host=localhost

worker.tomcat3.type=ajp13
worker.tomcat3.port=8011
worker.tomcat3.host=localhost


worker.balancer.type=lb
worker.balancer.balance_workers=tomcat1,tomcat2,tomcat3

worker.stat.type=status



SSL in tomcat
-----------------------------------
http://www.thegeekstuff.com/2011/09/ssl-for-tomcat-server/

SSL in mod_jk Apache
--------------------------------------

http://serverfault.com/questions/174857/tomcat-behind-apache-httpd-with-ssl-and-client-certificates
http://serverfault.com/questions/418590/ssl-configuration-tomcat-with-apache-and-mod-jk



Learn PermSize, HeapSize, Xmx Xmm , garbage collector

http://crunchify.com/jvm-tuning-heapsize-stacksize-garbage-collection-fundamental/

The amount allocated for the Young(Eden) generation is the value specified with -Xmn. The amount allocated for the older generation is the value of -Xmx minus the -Xmn. Generally, you donâ€™t want the Eden to be too big or it will take too long for the GC to look through it for space that can be reclaimed.

http://stackoverflow.com/questions/1634216/what-is-permsize-in-java

http://stackoverflow.com/questions/11341494/how-do-i-properly-set-the-permgen-size



















